{"version":3,"file":"block-copy.component.js","sourceRoot":"","sources":["../../../../build/src/app/copy/block-copy/block-copy.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,iBAAiB,EAClB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAElC,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D;;;;;;;;GAQG;AAOH;IAAwC,sCAAQ;IA0B9C;;OAEG;IACH,4BAAsB,WAAwB;QAA9C,YACE,kBAAM,WAAW,CAAC,SACnB;QAFqB,iBAAW,GAAX,WAAW,CAAa;QAlB9C;;WAEG;QACgB,cAAQ,GAAY,KAAK,CAAC;QAO7C;;WAEG;QACO,cAAQ,GAAW,QAAQ,CAAC,iBAAiB,CAAC,CAAC;;IAOzD,CAAC;IAKD,sBAAI,wCAAQ;QAHZ;;WAEG;aACH;YACE,MAAM,CAAI,IAAI,CAAC,QAAQ,YAAS,CAAC;QACnC,CAAC;;;OAAA;IAED;;OAEG;IACH,wCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAzCe;QAAf,KAAK,CAAC,OAAO,CAAC;;qDAAe;IAKR;QAArB,KAAK,CAAC,aAAa,CAAC;;2DAAqB;IAKvB;QAAlB,KAAK,CAAC,UAAU,CAAC;;wDAA2B;IAKb;QAA/B,KAAK,CAAC,uBAAuB,CAAC;;qEAA+B;IAnBnD,kBAAkB;QAN9B,SAAS,CAAC;YACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,+rCAAuoC;YACjpC,SAAS,EAAE,CAAC,6BAA6B,CAAC;SAC3C,CAAC;yCA8BmC,WAAW;OA7BnC,kBAAkB,CA8C9B;IAAD,yBAAC;CAAA,AA9CD,CAAwC,QAAQ,GA8C/C;SA9CY,kBAAkB","sourcesContent":["import {\n  Component,\n  Input,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { uniqueId } from 'lodash';\n\nimport { CopyBase } from '../copy-base';\nimport { CopyService } from '../copy-service/copy.service';\n\n/**\n * Block Copy component\n *\n * Usage:\n * <br/><code>import { BlockCopyModule } from 'patternfly-ng/copy';</code>\n *\n * Or:\n * <br/><code>import { BlockCopyModule } from 'patternfly-ng';</code>\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-block-copy',\n  template: `<div class=\"pfng-block-copy\"><label *ngIf=\"label\" class=\"pfng-block-copy-label\" [attr.for]=\"buttonId\">{{label}}</label><div class=\"pfng-block-copy-inner-container\"><div class=\"pfng-block-copy-preview\" [ngClass]=\"{'pf-is-open': expanded}\"><button [attr.aria-label]=\"expandToggleAriaLabel\" [attr.aria-expanded]=\"expanded\" class=\"pfng-block-copy-preview-btn\" (click)=\"togglePanel()\"><i aria-hidden=\"true\" class=\"fa pfng-block-copy-preview-icon\" [ngClass]=\"{'fa-angle-down': expanded, 'fa-angle-right': !expanded}\"></i></button><div class=\"pfng-block-copy-preview-txt-cont\" placement=\"{{tooltipPlacement ? tooltipPlacement : null}}\" tooltip=\"{{tooltip ? tooltip : null}}\"><span class=\"pfng-block-copy-preview-txt\">{{value}}</span></div><button [attr.id]=\"buttonId\" class=\"btn btn-lg btn-default pfng-block-copy-btn\" [attr.aria-label]=\"buttonAriaLabel\" (click)=\"copy()\"><span><ng-container *ngIf=\"!recentlyCopied\">{{buttonLabel}}</ng-container><ng-container *ngIf=\"recentlyCopied\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i> Copied</ng-container></span></button></div><div class=\"pfng-block-copy-body\" *ngIf=\"expanded\"><span>{{value}}</span></div></div></div>`,\n  styleUrls: ['./block-copy.component.less']\n})\nexport class BlockCopyComponent extends CopyBase {\n  /**\n   * Label output above the block copy component\n   */\n  @Input('label') label: string;\n\n  /**\n   * Copy button label\n   */\n  @Input('buttonLabel') buttonLabel: string;\n\n  /**\n   * Flag indicating the expanded state for the expansion panel\n   */\n  @Input('expanded') expanded: boolean = false;\n\n  /**\n   * Aria label for the expansion toggle\n   */\n  @Input('expandToggleAriaLabel') expandToggleAriaLabel: string;\n\n  /**\n   * Generates a unique prefix for element IDs\n   */\n  protected uniqueID: string = uniqueId('pfng-block-copy');\n\n  /**\n   * The default constructor\n   */\n  constructor(protected copyService: CopyService) {\n    super(copyService);\n  }\n\n  /**\n   * Generates a unique ID for the button\n   */\n  get buttonId(): string {\n    return `${this.uniqueID}-button`;\n  }\n\n  /**\n   * Toggle expansion panel open and close\n   */\n  togglePanel(): void {\n    this.expanded = !this.expanded;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}