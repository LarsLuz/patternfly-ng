{"version":3,"sources":["../../../build/src/app/notification/notification.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,WAAA,EAAY,MAAO,gBAAA,CAAiB;AAC7C,OAAO,EAAE,QAAA,EAAS,MAAO,eAAA,CAAgB;AAEzC,OAAO,EAAE,2BAAA,EAA4B,MAAO,qDAAA,CAAsD;AAClG,OAAO,EAAE,wBAAA,EAAyB,MAAO,kDAAA,CAAmD;AAC5F,OAAO,EAAE,2BAAA,EAA4B,MAAO,qDAAA,CAAsD;AAClG,OAAO,EAAE,wBAAA,EAAyB,MAAO,kDAAA,CAAmD;AAC5F,OAAO,EAAE,iBAAA,EAAkB,MAAO,sBAAA,CAAuB;AACzD,OAAO,EAAE,iBAAA,EAAkB,MAAO,sBAAA,CAAuB;AACzD,OAAO,EAAE,gBAAA,EAAiB,MAAO,qBAAA,CAAsB;AACvD,OAAO,EAAE,0BAAA,EAA2B,MAAO,mDAAA,CAAoD;AAC/F,OAAO,EAAE,uBAAA,EAAwB,MAAO,gDAAA,CAAiD;AACzF,OAAO,EAAE,8BAAA,EAA+B,MAAO,6DAAA,CAA8D;AAC7G,OAAO,EAAE,2BAAA,EAA4B,MAAO,0DAAA,CAA2D;AAEvG,OAAO,EACL,iBAAiB,EACjB,iBAAiB,EACjB,gBAAgB,EACjB,CAAC;AAEF;;;;;;;;;;;GAWG;AAEH;IACE;QACE,OAAO,CAAC,GAAG,CAAC,iFAAiF;YAC3F,mFAAmF,CAAC,CAAC;IACzF,CAAC;IACI,6BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,wBAAwB;wBACxB,wBAAwB;wBACxB,uBAAuB;wBACvB,2BAA2B;qBAC5B;oBACD,OAAO,EAAE;wBACP,2BAA2B;wBAC3B,2BAA2B;wBAC3B,0BAA0B;wBAC1B,8BAA8B;qBAC/B;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,yBAAC;CA1BD,AA0BC,IAAA;SA1BY,kBAAkB","file":"notification.module.js","sourceRoot":"","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { InlineNotificationComponent } from './inline-notification/inline-notification.component';\nimport { InlineNotificationModule } from './inline-notification/inline-notification.module';\nimport { NotificationDrawerComponent } from './notification-drawer/notification-drawer.component';\nimport { NotificationDrawerModule } from './notification-drawer/notification-drawer.module';\nimport { NotificaitonGroup } from './notification-group';\nimport { NotificationEvent } from './notification-event';\nimport { NotificationType } from './notification-type';\nimport { ToastNotificationComponent } from './toast-notification/toast-notification.component';\nimport { ToastNotificationModule } from './toast-notification/toast-notification.module';\nimport { ToastNotificationListComponent } from './toast-notification-list/toast-notification-list.component';\nimport { ToastNotificationListModule } from './toast-notification-list/toast-notification-list.module';\n\nexport {\n  NotificationEvent,\n  NotificaitonGroup,\n  NotificationType\n};\n\n/**\n * A module containing objects associated with notification components\n *\n * @deprecated Use individual module imports\n *\n * import {\n *   InlineNotificationModule,\n *   NotificationDrawerModule,\n *   ToastNotificationModule,\n *   ToastNotificationListModule\n * } from 'patternfly-ng/notification';\n */\n\nexport class NotificationModule {\n  constructor() {\n    console.log('patternfly-ng: NotificationModule is deprecated; use InlineNotificationModule, ' +\n      'NotificationDrawerModule, ToastNotificationModule, or ToastNotificationListModule');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    InlineNotificationModule,\n    NotificationDrawerModule,\n    ToastNotificationModule,\n    ToastNotificationListModule\n  ],\n  exports: [\n    InlineNotificationComponent,\n    NotificationDrawerComponent,\n    ToastNotificationComponent,\n    ToastNotificationListComponent\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}